# -*- coding: UTF8 -*-

from django.contrib.auth.decorators import login_required
from django.shortcuts import render_to_response, get_object_or_404
from django.template import Context, RequestContext
from registros.forms import RegistrosForm
from django.http import HttpResponse

#
# Deixar somente as views aqui
# Passar as funcoes para outro arquivo
#

import urllib2
from xml.dom.minidom import parse, parseString
from django.utils.encoding import smart_str, smart_unicode

import twitter

#
# Send Twitter
#
def envia_twitter(twitter,previsao):
    api=twitter.Api(consumer_key='GjDAsmaMQdZdli8pDXA',consumer_secret='lONZF93DzyXPB5974GxbUmqLxyvA9ZG3bXUoliYhG8', access_token_key='397486100-7a85pSTFG0Lld3CtWvyyfTD48xKZuDIXgiDZi2J8',access_token_secret='7vXvwJRgnf17bjKe2ddLqcIJr92Id4t75EPuOAY2M')
    tweet=''
    api.PostUpdate(tweet+''+twitter)

#
# twitter='morenocunha'
# tweet='@'+twitter+' seu ônibus irá passar em '+str(previsao[0])+' '+str(previsao[1])+' '+str(previsao[2])+' minutos'
# tweet='@'+twitter+' seus próximos ônibus irão passar dentro de '+str(previsao[0]+30)+', '+str(previsao[1]+30)+' e '+str(previsao[2]+30)+' minutos'
#
# Get Horarios
#
def previsao(ponto,linha):
    info=''
    opener = urllib2.build_opener()
    opener.addheaders = [
    ('Referer','http://rast.vitoria.es.gov.br/pontovitoria/'),
    ('User-agent', 'Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.13 (KHTML, like Gecko) Chrome/9.0.597.98 Safari/534.13'),
    ('Accept','application/xml, text/xml, */*;q=0.5'),
    ('Accept-Language','pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4'),
    ('Accept-Encoding','gzip,deflate,sdch'),
    ('Accept-Charset','ISO-8859-1,utf-8;q=0.7,*;q=0.3'),
    ('Keep-Alive','timeout=15, max=94')]
    info=opener.open('http://rast.vitoria.es.gov.br/previsao-web-service/previsao.jsp?ponto='+str(ponto)+'&linha='+str(linha)+'')
    
    previsao=[]
    xml0=parseString(info.read())
    for estimativa in xml0.childNodes[1].childNodes[1].getElementsByTagName("estimativa"):
        linha_id=estimativa.childNodes[3].childNodes[3].firstChild.data
        if linha_id == str(linha):
            linha_desc=estimativa.childNodes[3].childNodes[5].firstChild.data
            horarioEstimado=estimativa.childNodes[7].firstChild.data
            horarioPacote=estimativa.childNodes[9].firstChild.data
            previsao.append((int(horarioEstimado)-int(horarioPacote))/60000)
    
    return previsao

#
# Registro
#
@login_required
def registro(request):
    
    form=RegistrosForm(request.POST or None)
    if form.is_valid():
        #info=horarios(str(request.POST['ponto']),str(request.POST['linha']))
        form.save()
        #return render_to_response('registros/sucesso.html', context_instance=RequestContext(request,{'info':info}))
        return render_to_response('registros/sucesso.html', context_instance=RequestContext(request))
    
    return render_to_response('registros/registro.html', context_instance=RequestContext(request,{'form':form}))

def pontos(request):
    info=urllib2.urlopen('http://rast.vitoria.es.gov.br/pontovitoria/utilidades/listaPontos/')
    return HttpResponse(info.read())

def linhas(request, ponto):
    info=urllib2.urlopen('http://rast.vitoria.es.gov.br/pontovitoria/utilidades/listaLinhaPassamNoPonto/?ponto_oid='+str(ponto))
    return HttpResponse(info.read())
    
